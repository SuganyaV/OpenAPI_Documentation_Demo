/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.techfolks.openapi.productservice.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import com.techfolks.openapi.productservice.models.Product;

import javax.validation.Valid;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-10-04T21:24:10.406-07:00[America/Los_Angeles]")
@Api(value = "products", description = "the products API")
public interface ProductsApi {

    @ApiOperation(value = "", nickname = "productsGet", notes = "Obtain information of all product in database", response = Product.class, responseContainer = "List", tags={ "Product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful pull of Product info", response = Product.class, responseContainer = "List") })
    @RequestMapping(value = "/products",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Product>> productsGet(@Min(10) @Max(20) @ApiParam(value = "the amount of product returned.", allowableValues = "") @Valid @RequestParam(value = "bodylimit", required = false) Integer bodylimit
, @Min(1) @Max(5) @ApiParam(value = "the paged to return emplyee info.", allowableValues = "") @Valid @RequestParam(value = "pagelimit", required = false) Integer pagelimit
);


    @ApiOperation(value = "", nickname = "productsIdGet", notes = "Obtain information about specific product", response = Product.class, tags={ "Product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = Product.class) })
    @RequestMapping(value = "/products/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Product> productsIdGet(@ApiParam(value = "The ID of the product",required=true) @PathVariable("id") Integer id
);


    @ApiOperation(value = "", nickname = "productsPost", notes = "Creates a new product in the database", tags={ "Product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully created an employee") })
    @RequestMapping(value = "/products",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> productsPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Product body
);

}
